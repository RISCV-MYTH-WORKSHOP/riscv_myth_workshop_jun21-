\m4_TLV_version 1d: tl-x.org
\SV

   // =========================================
   // Welcome!  Try the tutorials via the menu.
   // =========================================

   // Default Makerchip TL-Verilog Code Template

   // Macro providing required top-level module definition, random
   // stimulus support, and Verilator config.
   m4_makerchip_module   // (Expanded in Nav-TLV pane.)
   //m4_include_lib(['https://raw.githubusercontent.com/stevehoover/RISC-V_MYTH_Workshop/bd1f186fde018ff9e3fd80597b7397a1c862cf15/tlv_lib/calculator_shell_lib.tlv'])
\TLV
   //Calculator with Validity and Mem_recall
   |calc
      @1
         $reset = *reset;
         //counter
         $valid_cnt[2:0] = $reset ? 0 : >>1$valid_cnt + 1;
         $valid = $reset | $valid_cnt[2];
         
   |calc
      ?$valid
         @1
            //calc
            $val1[31:0] = $reset ? 0 : >>2$out[31:0];
            $val2[31:0] = $rand2[3:0];
         
            $sum[31:0] = $val1 + $val2;
            $diff[31:0] = $val1 - $val2;
            $prod[31:0] = $val1 * $val2;
            $quot[31:0] = $val1 / $val2;
            
         @2
            $out[31:0] = $reset ? 32'd0 :
                         $op[2:0] == 2'b00 ? $sum :
                         $op == 3'b001 ? $diff :
                         $op == 3'b010 ? $prod :
                         $op == 3'b011 ? $quot : 
                         $mem; //default //Output the value obtained in previous cycle
                
      @2
         //$mem is independent of $valid
         $mem[31:0] = >>1$out; // holds(remembers) the previous value of output
      
   //m4+cal_viz() // Arg: Pipeline stage represented by viz, should be atleast equal to last stage of CALCULATOR logic.
   // Assert these to end simulation (before Makerchip cycle limit).
   *passed = *cyc_cnt > 40;
   *failed = 1'b0;
\SV
   endmodule
